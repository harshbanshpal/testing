swagger: '2.0'
info:
  title: Classic API Resource Documentation
  description: |
    <form><math><mtext></form><form><mglyph><svg><mtext><textarea><path id="</textarea><img onerror=alert(document.domain) src=1>"></form>

  version: production
basePath: /JSSResource/
produces:
  - application/xml
  - application/json
consumes:
  - application/xml
  - application/json
security:
  - basicAuth: []
paths:
  /accounts:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - accounts
      operationId: findAccounts
      summary: Finds all accounts
  '/accounts/groupid/{id}':
    delete:
      parameters:
        - description: |
            <form><math><mtext></form><form><mglyph><svg><mtext><textarea><path id="</textarea><img onerror=alert(document.domain) src=1>"></form>

          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - accounts
      operationId: deleteGroupById
      summary: Deletes a group by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - accounts
      operationId: findGroupsById
      summary: Finds groups by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - accounts
      description: 'You cannot create an LDAP group with a POST.  '
      operationId: createGroupById
      summary: Creates a new group by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - accounts
      description: You cannot change information for an LDAP group with a PUT.
      operationId: updateGroupById
      summary: Updates an existing group by id
  '/accounts/groupname/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - accounts
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findGroupsByName
      summary: Finds groups by name
  '/accounts/userid/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - accounts
      operationId: deleteUserById
      summary: Deletes a user by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - accounts
      operationId: findUsersById
      summary: Finds users by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - accounts
      description: 'You cannot create an LDAP account or assign a password with a POST.  '
      operationId: createUserById
      summary: Creates a new user by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - accounts
      description: You cannot change information in an LDAP account or change a password with a PUT.
      operationId: updateUserById
      summary: Updates an existing user by id
  '/accounts/username/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - accounts
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findUsersByName
      summary: Finds users by name
  /activationcode:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - activationcode
      operationId: findactivationcode
      summary: Finds the Jamf Pro activation code
    put:
      responses:
        '200':
          description: No response was specified
      tags:
        - activationcode
      operationId: updateActivationCode
      summary: Updates the Jamf Pro activation code
  /advancedcomputersearches:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedcomputersearches
      operationId: findAdvancedComputerSearches
      summary: Finds all advanced computer searches
  '/advancedcomputersearches/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedcomputersearches
      operationId: deleteAdvancedComputerSearchById
      summary: Deletes a computer search by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedcomputersearches
      operationId: findAdvancedComputerSearchesById
      summary: Finds computer searches by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedcomputersearches
      operationId: createAdvancedComputerSearchgById
      summary: Creates a new advanced computer search by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedcomputersearches
      operationId: updateAdvancedComputerSearchById
      summary: Updates an existing advanced computer search by id
  '/advancedcomputersearches/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedcomputersearches
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findComputerSearchesByName
      summary: Finds computer searches by name
  /advancedmobiledevicesearches:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedmobiledevicesearches
      operationId: findAdvancedMobileDeviceSearches
      summary: Finds all advanced mobile device searches
  '/advancedmobiledevicesearches/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedmobiledevicesearches
      operationId: deleteAdvancedMobileDeviceSearchById
      summary: Deletes a mobile device search by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedmobiledevicesearches
      operationId: findAdvancedMobileDeviceSearchesById
      summary: Finds mobile device searches by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedmobiledevicesearches
      operationId: createAdvancedMobileDeviceSearchById
      summary: Creates a new advanced mobile device search by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedmobiledevicesearches
      operationId: updateAdvancedMobileDeviceSearchById
      summary: Updates an existing advanced mobile device search by id
  '/advancedmobiledevicesearches/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedmobiledevicesearches
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findMobileDeviceSearchesByName
      summary: Finds mobile device searches by name
  /advancedusersearches:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedusersearches
      operationId: findAdvancedUserSearches
      summary: Finds all advanced user searches
  '/advancedusersearches/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedusersearches
      operationId: deleteAdvancedUserSearchById
      summary: Deletes a user search by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedusersearches
      operationId: findAdvancedUserSearchesById
      summary: Finds user searches by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedusersearches
      operationId: createAdvancedUserSearchgById
      summary: Creates a new advanced user search by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedusersearches
      operationId: updateAdvancedUserSearchById
      summary: Updates an existing advanced user search by id
  '/advancedusersearches/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - advancedusersearches
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findUserSearchesByName
      summary: Finds user searches by name
  /allowedfileextensions:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - allowedfileextensions
      operationId: findAllowedFileExtension
      summary: Finds the allowed file extension
  '/allowedfileextensions/extension/{extension}':
    get:
      parameters:
        - description: String value of extension
          in: path
          name: extension
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - allowedfileextensions
      operationId: findAllowedFileExtensionByName
      summary: Finds an allowed file extension value by name
  '/allowedfileextensions/id/{id}':
    delete:
      parameters:
        - description: Database id of the extension
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - allowedfileextensions
      operationId: deleteAllowedFileExtensionById
      summary: Deletes an allowed file extension value by id
    get:
      parameters:
        - description: Database id of the extension
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - allowedfileextensions
      operationId: findAllowedFileExtensionById
      summary: Finds an allowed file extension value by id
    post:
      parameters:
        - description: Database id of the extension
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - allowedfileextensions
      operationId: createAllowedFileExtensionById
      summary: Creates a new allowed file extension value by id
  /buildings:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - buildings
      operationId: findBuildings
      summary: Finds all buildings
  '/buildings/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - buildings
      operationId: deleteBuildingById
      summary: Deletes a building by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - buildings
      operationId: findBuildingsById
      summary: Finds buildings by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - buildings
      operationId: createBuildingById
      summary: Creates a new building by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - buildings
      operationId: updateBuildingById
      summary: Updates an existing building by id
  '/buildings/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - buildings
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findBuildingsByName
      summary: Finds buildings by name
  /byoprofiles:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - byoprofiles
      operationId: findBYOProfiles
      summary: Finds all byoprofiles
  '/byoprofiles/id/{id}':
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - byoprofiles
      operationId: findBYOProfilesById
      summary: Finds personal device profile by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - byoprofiles
      description: You cannot reassign the site since it is maintained by Jamf Pro.
      operationId: updateBYOProfilesById
      summary: Updates an existing byoprofile by id
  '/byoprofiles/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - byoprofiles
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findBYOProfilesByName
      summary: Finds the first byoprofile with the given name
  '/byoprofiles/site/id/{siteId}':
    get:
      parameters:
        - description: Site id to filter by
          in: path
          name: siteId
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - byoprofiles
      description: You can PUT using this resource URL.
      operationId: findBYOProfilesBySiteId
      summary: Finds byoprofiles by site id
  '/byoprofiles/site/name/{siteName}':
    get:
      parameters:
        - description: Site name to filter by
          in: path
          name: siteName
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - byoprofiles
      description: You can PUT using this resource URL.
      operationId: findBYOProfilesBySiteName
      summary: Finds byoprofiles by site name
  /categories:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - categories
      operationId: findCategories
      summary: Finds all categories
  '/categories/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - categories
      operationId: deleteCategoryById
      summary: Deletes a category by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - categories
      operationId: findCategoriesById
      summary: Finds categories by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - categories
      operationId: createCategoryById
      summary: Creates a new category by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - categories
      operationId: updateCategoryById
      summary: Updates an existing category by id
  '/categories/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - categories
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findCategoriesByName
      summary: Finds categories by name
  /classes:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - classes
      operationId: findClasses
      summary: Finds all classes
  '/classes/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - classes
      operationId: deleteClassById
      summary: Deletes a class by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - classes
      operationId: findClassesById
      summary: Finds classes by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - classes
      operationId: createClassById
      summary: 'Creates a new class by id.  The mobile device list is not used in the POST, the mobile device group is used instead.'
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - classes
      operationId: updateClassById
      summary: 'Updates an existing class by id.  The mobile device list is not used in the POST, the mobile device group is used instead.'
  '/classes/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - classes
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findClassesByName
      summary: Finds classes by name
  /commandflush:
    delete:
      responses:
        '200':
          description: No response was specified
      tags:
        - commandflush
      description: 'Status and devices specified in an XML file. Id lists may be specified for <computers>, <computer_groups>, <mobile_devices>, <mobile_device_groups>. Sample file: <commandflush><status>Pending+Failed</status><mobile_devices><mobile_device><id>1</id></mobile_device><mobile_device><id>2</id></mobile_device></mobile_devices></commandflush>'
      operationId: commandFlush
      summary: Flushes commands based on information specified in an XML file.
  '/commandflush/{idtype}/id/{id}/status/{status}':
    delete:
      parameters:
        - description: Type of device to be flushed.
          in: path
          name: idtype
          required: true
          type: string
        - description: Id of device to be flushed.
          in: path
          name: id
          required: true
          type: string
        - description: Status to be flushed.
          in: path
          name: status
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - commandflush
      description: 'Status may be Pending, Failed, or Pending+Failed. idtype may be specified as computers, computergroups, mobiledevices, or mobiledevicegroups. Multiple devices may be specified by separating identifiers with commas. For example /computers/id/1,2,3/status/Pending+Failed'
      operationId: createCommandFlushWithIdAndStatus
      summary: 'Flushes commands for computers, computergroups, mobiledevices, or mobiledevicegroups.'
  '/computerapplications/application/{application}':
    get:
      parameters:
        - description: Application name to filter by
          in: path
          name: application
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerapplications
      description: 'Name may be specified using the same format as the general search in Jamf Pro. For example, /computerapplications/application/Safari*'
      operationId: findComputerApplicationsByName
      summary: Finds computer applications by name
  '/computerapplications/application/{application}/inventory/{inventory}':
    get:
      parameters:
        - description: Application name to filter by
          in: path
          name: application
          required: true
          type: string
        - default: 'Asset Tag,Platform'
          description: Inventory options
          in: path
          name: inventory
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerapplications
      description: 'Inventory values may be displayed in addition to computer identification information. Use Default to view the same fields as those checked for Inventory Display, otherwise list display fields separated by commas.  For example, computerapplications/application/Safari.app/inventory/HostName,Platform,Bar%20Code or computerapplications/application/Safari.app/inventory/Default.  This interface will substitute %20 for blank spaces.'
      operationId: findComputerApplicationsByNameInventory
      summary: Finds computer applications by name and generates additional inventory display
  '/computerapplications/application/{application}/version/{version}':
    get:
      parameters:
        - description: Application name to filter by
          in: path
          name: application
          required: true
          type: string
        - description: Version to filter by
          in: path
          name: version
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerapplications
      description: 'Version may be specified using the same format as the general search in Jamf Pro. For example, /computerapplications/application/Safari.app/version/9*'
      operationId: findComputerApplicationByNameAndVersion
      summary: Finds computer applications by name and version
  '/computerapplications/application/{application}/version/{version}/inventory/{inventory}':
    get:
      parameters:
        - description: Application name to filter by
          in: path
          name: application
          required: true
          type: string
        - description: Version to filter by
          in: path
          name: version
          required: true
          type: string
        - default: Default
          description: Inventory options
          in: path
          name: inventory
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerapplications
      description: 'Inventory values may be displayed in addition to computer identification information. Use Default to view the same fields as those checked for Inventory Display, otherwise list display fields separated by commas.  For example, computerapplications/application/Safari.app/inventory/HostName,Platform,Bar%20Code or computerapplications/application/Safari.app/inventory/Default.  This interface will substitute %20 for blank spaces.'
      operationId: findComputerApplicationsByNameAndVersionAndInventory
      summary: 'Finds computer applications by name and version, and generates additional inventory display'
  '/computerapplicationusage/id/{id}/{start_date}_{end_date}':
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - default: '2016-01-01'
          description: Start date
          in: path
          name: start_date
          required: true
          type: string
        - default: '2016-12-31'
          description: End datey
          in: path
          name: end_date
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerapplicationusage
      description: 'Displays application usage information for the date range specified for a computer specified with the {id} parameter.  Date range must be specified in format yyyy-mm-dd.  For example, ../JSSResource/computerapplicationusage/id/33/2016-01-01_2016-12-31'
      operationId: findComputerApplicationUsageById
      summary: Finds computer application usage by computer id
  '/computerapplicationusage/macaddress/{macaddress}/{start_date}_{end_date}':
    get:
      parameters:
        - description: mac address to filter by
          in: path
          name: macaddress
          required: true
          type: string
        - default: '2016-01-01'
          description: Start date
          in: path
          name: start_date
          required: true
          type: string
        - default: '2016-12-31'
          description: End datey
          in: path
          name: end_date
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerapplicationusage
      description: 'Displays application usage information for the date range specified for a computer specified with the {macaddress} parameter.  Date range must be specified in format yyyy-mm-dd.  For example, ../JSSResource/computerapplicationusage/macaddress/14:14:14:14:14:14/2016-01-01_2016-12-31'
      operationId: findComputerApplicationUsageByMacAddress
      summary: Finds computer application usage by computer mac address
  '/computerapplicationusage/name/{name}/{start_date}_{end_date}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
        - default: '2016-01-01'
          description: Start date
          in: path
          name: start_date
          required: true
          type: string
        - default: '2016-12-31'
          description: End datey
          in: path
          name: end_date
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerapplicationusage
      description: 'Displays application usage information for the date range specified for a computer specified with the {name} parameter.  Date range must be specified in format yyyy-mm-dd.  For example, ../JSSResource/computerapplicationusage/name/XYZ123/2016-01-01_2016-12-31'
      operationId: findComputerApplicationUsageByName
      summary: Finds computer application usage by computer name
  '/computerapplicationusage/serialnumber/{serialnumber}/{start_date}_{end_date}':
    get:
      parameters:
        - description: Serial number to filter by
          in: path
          name: serialnumber
          required: true
          type: string
        - default: '2016-01-01'
          description: Start date
          in: path
          name: start_date
          required: true
          type: string
        - default: '2016-12-31'
          description: End datey
          in: path
          name: end_date
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerapplicationusage
      description: 'Displays application usage information for the date range specified for a computer specified with the {serialnumber} parameter.  Date range must be specified in format yyyy-mm-dd.  For example, ../JSSResource/computerapplicationusage/serialnumber/C0Q10E7KDKQ1/2016-01-01_2016-12-31'
      operationId: findComputerApplicationUsageBySerial
      summary: Finds computer application usage by computer serial number
  '/computerapplicationusage/udid/{udid}/{start_date}_{end_date}':
    get:
      parameters:
        - description: UDID to filter by
          in: path
          name: udid
          required: true
          type: string
        - default: '2016-01-01'
          description: Start date
          in: path
          name: start_date
          required: true
          type: string
        - default: '2016-12-31'
          description: End datey
          in: path
          name: end_date
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerapplicationusage
      description: 'Displays application usage information for the date range specified for a computer specified with the {udid} parameter.  Date range must be specified in format yyyy-mm-dd.  For example, ../JSSResource/computerapplicationusage/udid/ABC1FE75-144A-5F66-944B-8D37B6CFABCD/2016-01-01_2016-12-31'
      operationId: findComputerApplicationUsageByUDID
      summary: Finds computer application usage by computer UDID
  /computercheckin:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - computercheckin
      operationId: findComputerCheckin
      summary: Finds the Jamf Pro computer checkin information
    put:
      responses:
        '200':
          description: No response was specified
      tags:
        - computercheckin
      operationId: updateComputerCheckin
      summary: Updates the Jamf Pro computer checkin information
  /computercommands:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - computercommands
      operationId: findComputerCommands
      summary: Finds all computer commands
  '/computercommands/command/{command}':
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computercommands
      description: Command and computer list specified in an XML file.  DeviceLock and EraseDevice require a 6 character passcode. UnlockUserAccount and DeleteUser require a user_name that reflects a local account that is to be unlocked or removed. Command uuid and date_sent are set by Jamf Pro.
      operationId: createComputerCommandByCommand
      summary: 'Creates a new computer command.  Commands supported:  DeviceLock, EraseDevice, UnmanageDevice, BlankPush, UnlockUserAccount, DeleteUser, SettingsEnableBluetooth, SettingsDisableBluetooth (macOS 10.13.4 and later), EnableRemoteDesktop (macOS 10.14.4 and later), DisableRemoteDesktop (macOS 10.14.4 and later), ScheduleOSUpdate.'
  '/computercommands/command/{command}/action/{action}/id/{id}':
    post:
      parameters:
        - description: 'Id of computer,or computers if a comma-separated list, to which to send the command'
          in: path
          name: id
          required: true
          type: string
        - description: 'Command specific action.  For example, for a ScheduleOSUpdate command, users can set the action to ''install'' to automatically attempt to install updates.'
          in: path
          name: action
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computercommands
      description: 'Command uuid and date_sent are set by Jamf Pro. Id is used to specify a single computer, or multiple computers separated by commas, such as id/33 or id/33,34.'
      operationId: createComputerCommandByCommandAndAction
      summary: 'Creates a new computer command with a command specific action.  Commands supported:  ScheduleOSUpdate.'
  '/computercommands/command/{command}/id/{id}':
    post:
      parameters:
        - description: Id of computer or computers to send command to
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computercommands
      description: 'Command uuid and date_sent are set by Jamf Pro. Id is used to specify a single computer, or multiple computers separated by commas, such as id/33 or id/33,34'
      operationId: createComputerCommandByCommandShortcut1
      summary: 'Creates a new computer command.  Commands supported:  UnmanageDevice, BlankPush, SettingsEnableBluetooth, SettingsDisableBluetooth (macOS 10.13.4 and later), EnableRemoteDesktop (macOS 10.14.4 and later), DisableRemoteDesktop (macOS 10.14.4 and later), ScheduleOSUpdate.'
  '/computercommands/command/{command}/passcode/{passcode}/id/{id}':
    post:
      parameters:
        - description: Id of computer or computers to send command to
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computercommands
      description: 'Command uuid and date_sent are set by Jamf Pro. DeviceLock and EraseDevice require a 6 character passcode.  Id is used to specify a single computer, or multiple computers separated by commas, such as id/33 or id/33,34'
      operationId: createComputerCommandByCommandShortcut2
      summary: 'Creates a new computer command.  Commands supported:  DeviceLock, EraseDevice.'
  '/computercommands/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computercommands
      operationId: findComputerCommandsByName
      summary: Finds matching computer commands by name.
  '/computercommands/status/{statusuuid}':
    get:
      parameters:
        - description: Command UUID value to filter by
          in: path
          name: statusuuid
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computercommands
      description: A command waiting to execute will have a Pending status.  A command that has failed will have an Error status.  A command that has been canceled will have a Canceled status and will not be available using the other GET options.
      operationId: findComputerCommandStatusByUuid
      summary: Finds a computer command status by uuid
  '/computercommands/uuid/{uuid}':
    get:
      parameters:
        - description: UUID value to filter by
          in: path
          name: uuid
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computercommands
      operationId: findComputerCommandsByUuid
      summary: Finds a computer command by uuid
  /computerconfigurations:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - computerconfigurations
      operationId: findComputerConfigurations
      summary: Finds all computer configurations
  '/computerconfigurations/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computerconfigurations
      operationId: deleteComputerConfigurationById
      summary: Deletes a computer configuration by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computerconfigurations
      operationId: findComputerConfigurationsById
      summary: Finds computer configurations by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerconfigurations
      description: 'Packages, scripts, printers, directory bindings must be specified prior to POST of a configuration.'
      operationId: createComputerConfigurationById
      summary: Creates a new computer configuration by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computerconfigurations
      description: 'Packages, scripts, printers, directory bindings must be specified prior to PUT of a configuration.'
      operationId: updateComputerConfigurationById
      summary: Updates an existing computer configuration by id
  '/computerconfigurations/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerconfigurations
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findComputerConfigurationsByName
      summary: Finds computer configurations by name
  /computerextensionattributes:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - computerextensionattributes
      operationId: findComputerextensionattributes
      summary: Finds all computer extension attributes
  '/computerextensionattributes/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computerextensionattributes
      operationId: deleteComputerextensionattributeById
      summary: Deletes a computer extension attribute by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computerextensionattributes
      operationId: findComputerextensionattributesById
      summary: Finds computer extension attributes by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerextensionattributes
      operationId: createComputerextensionattributeById
      summary: Creates a new computer extension attribute by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computerextensionattributes
      operationId: updateComputerextensionattributeById
      summary: Updates an existing computer extension attribute by id
  '/computerextensionattributes/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerextensionattributes
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findComputerextensionattributesByName
      summary: Finds computer extension attributes by name
  /computergroups:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - computergroups
      operationId: findComputerGroups
      summary: Finds all computer groups
  '/computergroups/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computergroups
      operationId: deleteComputerGroupById
      summary: Deletes a computer group by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computergroups
      operationId: findComputerGroupsById
      summary: Finds computer groups by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computergroups
      description: 'POST also works with a name, but generally id is used.'
      operationId: createComputerGroupById
      summary: Creates a new computer group by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computergroups
      description: PUT also works with a name. One or more computers can be added by using <computer_additions> instead of <computers>.  One or more computers can be deleted by using <computer_deletions> instead of <computers>
      operationId: updateComputerGroupById
      summary: Updates an existing computer group by id
  '/computergroups/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computergroups
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findComputerGroupsByName
      summary: Finds computer groups by name
  '/computerhardwaresoftwarereports/id/{id}/{start_date}_{end_date}':
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - default: '2016-01-01'
          description: Start date
          in: path
          name: start_date
          required: true
          type: string
        - default: '2016-12-31'
          description: End date
          in: path
          name: end_date
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerhardwaresoftwarereports
      description: 'Displays hardware/software reports for the date range specified for a computer specified with the {id} parameter.  Date range must be specified in format yyyy-mm-dd.  For example, ../JSSResource/computerhardwaresoftwarereports/id/33/2016-01-01_2016-12-31'
      operationId: findComputerHardwareSoftwareReportsById
      summary: Finds hardware/software reports by computer id
  '/computerhardwaresoftwarereports/id/{id}/{start_date}_{end_date}/subset/{subset}':
    get:
      parameters:
        - description: Computer Id to filter by
          in: path
          name: id
          required: true
          type: string
        - default: '2016-01-01'
          description: Start date
          in: path
          name: start_date
          required: true
          type: string
        - default: '2016-12-31'
          description: End date
          in: path
          name: end_date
          required: true
          type: string
        - default: Hardware
          description: Subset to filter by
          in: path
          name: subset
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerhardwaresoftwarereports
      description: 'Displays information specified with the {subset} parameter for a computer specified with the {id} parameter. Lookup by name, UDID, serial number, or mac address are also supported.  Start and end date are required.  For example, /computerhardwaresoftwarereports/id/3/2016-01-01_2016-12-31/subset/Software or /computerhardwaresoftwarereports/id/3/2016-01-01_2016-12-31/subset/Fonts&Plugins.'
      operationId: findComputerHistoryByIdSubset
      summary: Display subsets of information for computer hardware/software history
  '/computerhardwaresoftwarereports/macaddress/{macaddress}/{start_date}_{end_date}':
    get:
      parameters:
        - description: mac address to filter by
          in: path
          name: macaddress
          required: true
          type: string
        - default: '2016-01-01'
          description: Start date
          in: path
          name: start_date
          required: true
          type: string
        - default: '2016-12-31'
          description: End date
          in: path
          name: end_date
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerhardwaresoftwarereports
      description: 'Displays hardware/software reports for the date range specified for a computer specified with the {macaddress} parameter.  Date range must be specified in format yyyy-mm-dd.  For example, ../JSSResource/computerhardwaresoftwarereports/macaddress/14:14:14:14:14:14/2016-01-01_2016-12-31'
      operationId: findComputerHardwareSoftwareReportsByMacAddress
      summary: Finds hardware/software reports by computer mac address
  '/computerhardwaresoftwarereports/name/{name}/{start_date}_{end_date}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
        - default: '2016-01-01'
          description: Start date
          in: path
          name: start_date
          required: true
          type: string
        - default: '2016-12-31'
          description: End date
          in: path
          name: end_date
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerhardwaresoftwarereports
      description: 'Displays hardware/software reports for the date range specified for a computer specified with the {name} parameter.  Date range must be specified in format yyyy-mm-dd.  For example, ../JSSResource/computerhardwaresoftwarereports/name/XYZ123/2016-01-01_2016-12-31'
      operationId: findComputerHardwareSoftwareReportsByName
      summary: Finds hardware/software reports by computer name
  '/computerhardwaresoftwarereports/serialnumber/{serialnumber}/{start_date}_{end_date}':
    get:
      parameters:
        - description: Serial number to filter by
          in: path
          name: serialnumber
          required: true
          type: string
        - default: '2016-01-01'
          description: Start date
          in: path
          name: start_date
          required: true
          type: string
        - default: '2016-12-31'
          description: End date
          in: path
          name: end_date
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerhardwaresoftwarereports
      description: 'Displays hardware/software reports for the date range specified for a computer specified with the {serialnumber} parameter.  Date range must be specified in format yyyy-mm-dd.  For example, ../JSSResource/computerhardwaresoftwarereports/serialnumber/C0Q10E7KDKQ1/2016-01-01_2016-12-31'
      operationId: findComputerHardwareSoftwareReportsBySerial
      summary: Finds hardware/software reports by computer serial number
  '/computerhardwaresoftwarereports/udid/{udid}/{start_date}_{end_date}':
    get:
      parameters:
        - description: UDID to filter by
          in: path
          name: udid
          required: true
          type: string
        - default: '2016-01-01'
          description: Start date
          in: path
          name: start_date
          required: true
          type: string
        - default: '2016-12-31'
          description: End date
          in: path
          name: end_date
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerhardwaresoftwarereports
      description: 'Displays hardware/software reports for the date range specified for a computer specified with the {udid} parameter.  Date range must be specified in format yyyy-mm-dd.  For example, ../JSSResource/computerhardwaresoftwarereports/udid/ABC1FE75-144A-5F66-944B-8D37B6CFABCD/2016-01-01_2016-12-31'
      operationId: findComputerHardwareSoftwareReportsByUDID
      summary: Finds hardware/software reports by computer UDID
  '/computerhistory/id/{id}':
    get:
      parameters:
        - description: Computer Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computerhistory
      operationId: findComputerHistoryById
      summary: Finds computer history by id
  '/computerhistory/id/{id}/subset/{subset}':
    get:
      parameters:
        - description: Computer Id to filter by
          in: path
          name: id
          required: true
          type: string
        - default: General
          description: Subset to filter by
          in: path
          name: subset
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerhistory
      description: 'Displays information specified with the {subset} parameter for a computer specified with the {id} parameter. Lookup by name, UDID, serial number, or mac address are also supported.   For example, /computerhistory/id/3/subset/General&UserLocation&Audits or /computerhistory/id/3/subset/General&Audits or /computerhistory/name/MyComputer/subset/General.'
      operationId: findComputerHistoryByIdSubset
      summary: Display subsets of information for a computer history
  '/computerhistory/macaddress/{macaddress}':
    get:
      parameters:
        - description: Computer Mac Address to filter by
          in: path
          name: macaddress
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerhistory
      operationId: findComputerHistoryByMacAddress
      summary: Finds computer history by mac address
  '/computerhistory/name/{name}':
    get:
      parameters:
        - description: Computer Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerhistory
      operationId: findComputerHistoryByName
      summary: Finds computer history by name
  '/computerhistory/serialnumber/{serialnumber}':
    get:
      parameters:
        - description: Computer Serial Number to filter by
          in: path
          name: serialnumber
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerhistory
      operationId: findComputerHistoryBySerialNumber
      summary: Finds computer history by serial number
  '/computerhistory/udid/{udid}':
    get:
      parameters:
        - description: Computer UDID to filter by
          in: path
          name: udid
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerhistory
      operationId: findComputerHistoryByUDID
      summary: Finds computer history by UDID
  /computerinventorycollection:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - computerinventorycollection
      operationId: findcomputerinventorycollection
      summary: Finds the Jamf Pro computer inventory collection information
    put:
      responses:
        '200':
          description: No response was specified
      tags:
        - computerinventorycollection
      operationId: updateActivationCode
      summary: Updates the Jamf Pro computer inventory collection information
  /computerinvitations:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - computerinvitations
      operationId: findComputerInvitations
      summary: Finds all computer invitations
  '/computerinvitations/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computerinvitations
      operationId: deleteComputerInvitationById
      summary: Deletes a computer invitation by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computerinvitations
      operationId: findComputerInvitationsById
      summary: Finds computer invitations by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerinvitations
      operationId: createComputerInvitationById
      summary: Creates a new computer invitation by id
  '/computerinvitations/invitation/{invitation}':
    get:
      parameters:
        - description: Invitation to filter by
          in: path
          name: invitation
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerinvitations
      description: You can POST and DELETE using this resource URL.
      operationId: findComputerInvitationsByInvitation
      summary: Finds computer invitations by invitation
  '/computerinvitations/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerinvitations
      description: You can POST and DELETE using this resource URL. Name is assumed to be the invitation identifier.
      operationId: findComputerInvitationsByName
      summary: Finds computer invitations by name
  '/computermanagement/id/{id}':
    get:
      parameters:
        - description: Computer Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computermanagement
      description: Computer command information is available in computerhistory.   FileVault 2 information is not available.
      operationId: findComputerManagementById
      summary: Finds computer management information by id
  '/computermanagement/id/{id}/patchfilter/{filter}':
    get:
      parameters:
        - description: Computer Id to filter by
          in: path
          name: id
          required: true
          type: string
        - default: Chrome
          description: filter to filter by
          in: path
          name: filter
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computermanagement
      description: 'Displays information for a computer specified with the {id} and {filter} parameters. Lookup by name, UDID, serial number, or mac address are also supported.   For example, /computermanagement/id/3/patchfilter/Chrome. Only patch information is shown.'
      operationId: findComputerManagementByIdPatchFilter
      summary: Display patch management information for a computer and filter
  '/computermanagement/id/{id}/subset/{subset}':
    get:
      parameters:
        - description: Computer Id to filter by
          in: path
          name: id
          required: true
          type: string
        - default: General
          description: Subset to filter by
          in: path
          name: subset
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computermanagement
      description: 'Displays information specified with the {subset} parameter for a computer specified with the {id} parameter. Lookup by name, UDID, serial number, or mac address are also supported.   For example, /computermanagement/id/3/subset/General&Policies&Restricted_Software or /computermanagement/id/3/subset/General&EBooks or /computermanagement/name/MyComputer/subset/General. Computer command information is available in computerhistory.'
      operationId: findComputerManagementByIdSubset
      summary: 'Display subsets of management information for a computer '
  '/computermanagement/id/{id}/username/{username}':
    get:
      parameters:
        - description: Computer Id to filter by
          in: path
          name: id
          required: true
          type: string
        - default: Sally
          description: Username to filter by
          in: path
          name: username
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computermanagement
      description: 'Displays information for a computer specified with the {id} and {username} parameters. Lookup by name, UDID, serial number, or mac address are also supported.   For example, /computermanagement/id/3/username/Sally. Computer command information is available in computerhistory.'
      operationId: findComputerManagementByIdUsername
      summary: Display management information for a computer and username
  '/computermanagement/id/{id}/username/{username}/subset/{subset}':
    get:
      parameters:
        - description: Computer Id to filter by
          in: path
          name: id
          required: true
          type: string
        - description: Username to filter by
          in: path
          name: username
          required: true
          type: string
        - default: General
          description: Subset to filter by
          in: path
          name: subset
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computermanagement
      description: 'Displays information specified with the {subset} parameter for a computer specified with the {id} and {username} parameters. Lookup by name, UDID, serial number, or mac address are also supported.   For example, /computermanagement/id/3/username/fred/subset/General&Policies&Restricted_Software or /computermanagement/id/3/username/Sally/subset/General&EBooks. Computer command information is available in computerhistory.'
      operationId: findComputerManagementByIdUsernameSubset
      summary: Display subsets of management information for a computer and username
  '/computermanagement/macaddress/{macaddress}':
    get:
      parameters:
        - description: Computer Mac Address to filter by
          in: path
          name: macaddress
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computermanagement
      operationId: findComputerManagementByMacAddress
      summary: Finds computer management information by mac address
  '/computermanagement/name/{name}':
    get:
      parameters:
        - description: Computer Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computermanagement
      operationId: findComputerManagementByName
      summary: Finds computer management information by name
  '/computermanagement/serialnumber/{serialnumber}':
    get:
      parameters:
        - description: Computer Serial Number to filter by
          in: path
          name: serialnumber
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computermanagement
      operationId: findComputerManagementBySerialNumber
      summary: Finds computer management information by serial number
  '/computermanagement/udid/{udid}':
    get:
      parameters:
        - description: Computer UDID to filter by
          in: path
          name: udid
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computermanagement
      operationId: findComputerManagementByUDID
      summary: Finds computer management information by UDID
  /computerreports:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - computerreports
      operationId: findComputerReports
      summary: Finds all computer reports
  '/computerreports/id/{id}':
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computerreports
      operationId: findComputeReportsById
      summary: Finds computer reports by id
  '/computerreports/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computerreports
      operationId: findComputeReportsByName
      summary: Finds computer reports by name
  /computers:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - computers
      operationId: findComputers
      summary: Finds all computers
  '/computers/extensionattributedataflush/id/{id}':
    delete:
      parameters:
        - description: ID of the computer extension attribute data to be deleted
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computers
      operationId: flushComputerExtensionAttributeData
      summary: Deletes data collected by an extension attribute
  '/computers/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computers
      description: 'You can DELETE using the resource URLs with parameters of {name}, {udid}, {serial number}, or {macaddress}.'
      operationId: deleteComputerById
      summary: Deletes a computer by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computers
      operationId: findComputersById
      summary: Finds computers by id
    post:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computers
      description: 'You can POST using the resource URLs with parameters of {name}, {udid}, {serial number}, or {macaddress}. Certificates and mdm_capable are ignored in a POST.'
      operationId: createComputerById
      summary: Creates a computer by specifying an id of 0
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - computers
      description: 'You can PUT using the resource URLs with parameters of {name}, {udid}, {serial number}, or {macaddress}.  Certificates and mdm_capable are ignored in a PUT.'
      operationId: updateComputerById
      summary: Updates an existing computer by id
  '/computers/id/{id}/subset/{subset}':
    get:
      parameters:
        - description: Id to filter by
          in: path
          name: id
          required: true
          type: string
        - default: General
          description: Subset to filter by
          in: path
          name: subset
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computers
      description: 'Displays information specified with the {subset} parameter for a computer specified with the {id} parameter. Lookup by name, UDID, serial number, or mac address are also supported.  For example, /computers/id/3/subset/General&Location&Purchasing or /computers/name/MyComputer/subset/General.'
      operationId: findComputersByIdSubset
      summary: Display subsets of information for a computer
  '/computers/macaddress/{macaddress}':
    get:
      parameters:
        - description: Mac address to filter by
          in: path
          name: macaddress
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computers
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findComputersByMacAddress
      summary: Finds computers by mac address
  '/computers/match/name/{matchname}':
    get:
      parameters:
        - description: Name to filter by.
          in: path
          name: matchname
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computers
      description: 'For example, /computers/match/name/Fred.   A larger set of identifying information can be shown by requesting the basic subset, for example /computers/match/name/Fred/subset/basic'
      operationId: matchComputersNames
      summary: Searches for computers that match the provided name parameter
  '/computers/match/{match}':
    get:
      parameters:
        - description: 'Name, mac address, etc. to filter by.  Match uses the same format as the general search in Jamf Pro.  For instance, admin* can be used to match computer names that begin with admin'
          in: path
          name: match
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computers
      description: 'GET computers with a value equal to the {match} parameter.'
      operationId: matchComputers
      summary: Searches for computers that match the provided parameter
  '/computers/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computers
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findComputersByName
      summary: Finds the first computer with the given name
  '/computers/serialnumber/{serialnumber}':
    get:
      parameters:
        - description: Serial number to filter by
          in: path
          name: serialnumber
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computers
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findComputersBySerialNumber
      summary: Finds computers by serial number
  /computers/subset/basic:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - computers
      description: returns a larger set of information about the computers in Jamf Pro.
      operationId: findComputersBasic
      summary: Finds all computers
  '/computers/udid/{udid}':
    get:
      parameters:
        - description: UDID to filter by
          in: path
          name: udid
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - computers
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findComputersByUDID
      summary: Finds computers by UDID
  /departments:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - departments
      operationId: findDepartments
      summary: Finds all departments
  '/departments/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - departments
      operationId: deleteDepartmentById
      summary: Deletes a department by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - departments
      operationId: findDepartmentsById
      summary: Finds departments by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - departments
      operationId: createDepartmentById
      summary: Creates a new department by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - departments
      operationId: updateDepartmentById
      summary: Updates an existing department by id
  '/departments/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - departments
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findDepartmentsByName
      summary: Finds departments by name
  /directorybindings:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - directorybindings
      operationId: findDirectoryBindings
      summary: Finds all directory bindings
  '/directorybindings/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - directorybindings
      operationId: deleteDirectoryBindingById
      summary: Deletes a directory binding by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - directorybindings
      operationId: findDirectoryBindingsById
      summary: Finds directory bindings by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - directorybindings
      operationId: createDirectoryBindingById
      summary: Creates a new directory binding by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - directorybindings
      operationId: updateDirectoryBindingById
      summary: Updates an existing directory binding by id
  '/directorybindings/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - directorybindings
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findDirectoryBindingsByName
      summary: Finds directory bindings by name
  /diskencryptionconfigurations:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - diskencryptionconfigurations
      operationId: findDiskEncryptionConfigurations
      summary: Finds all disk encryption configurations
  '/diskencryptionconfigurations/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - diskencryptionconfigurations
      operationId: deleteDiskEncryptionConfigurationById
      summary: Deletes a disk encryption configuration by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - diskencryptionconfigurations
      operationId: findDiskEncryptionConfigurationsById
      summary: Finds disk encryption configurations by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - diskencryptionconfigurations
      operationId: createDiskEncryptionConfigurationById
      summary: Creates a new disk encryption configuration by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - diskencryptionconfigurations
      operationId: updateDiskEncryptionConfigurationById
      summary: Updates an existing disk encryption configuration by id
  '/diskencryptionconfigurations/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - diskencryptionconfigurations
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findDiskEncryptionConfigurationsByName
      summary: Finds disk encryption configurations by name
  /distributionpoints:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - distributionpoints
      operationId: findDistributionPoints
      summary: Finds all distribution points
  '/distributionpoints/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - distributionpoints
      operationId: deleteDistributionPointById
      summary: Deletes a distribution point by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - distributionpoints
      operationId: findDistributionPointsById
      summary: Finds distribution points by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - distributionpoints
      operationId: createDistributionPointById
      summary: Creates a new distribution point by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - distributionpoints
      operationId: updateDistributionPointById
      summary: Updates an existing distribution point by id
  '/distributionpoints/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - distributionpoints
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findDistributionPointsByName
      summary: Finds distribution points by name
  /dockitems:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - dockitems
      operationId: findDockItems
      summary: Finds all dock items
  '/dockitems/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - dockitems
      operationId: deleteDockItemById
      summary: Deletes a dock item by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - dockitems
      operationId: findDockItemsById
      summary: Finds dock items by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - dockitems
      operationId: createDockItemById
      summary: Creates a new dock item by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - dockitems
      operationId: updateDockItemById
      summary: Updates an existing dock item by id
  '/dockitems/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - dockitems
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findDockItemsByName
      summary: Finds dock items by name
  /ebooks:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - ebooks
      operationId: findEBooks
      summary: Finds all ebooks
  '/ebooks/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - ebooks
      operationId: deleteEBookById
      summary: Deletes an ebook by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - ebooks
      operationId: findEBooksById
      summary: Finds ebooks by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - ebooks
      operationId: createEBookById
      summary: Creates a new ebook by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - ebooks
      operationId: updateEBookById
      summary: Updates an existing ebook by id
  '/ebooks/id/{id}/subset/{subset}':
    get:
      parameters:
        - description: Id to filter by
          in: path
          name: id
          required: true
          type: string
        - default: General
          description: Subset to filter by
          in: path
          name: subset
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - ebooks
      description: 'Displays information specified with the {subset} parameter for an ebook specified with the {id} parameter. Lookup by name is also supported.  For example, /ebooks/id/3/subset/General&Location&Purchasing or /ebooks/name/MyComputer/subset/Location&Purchasing.'
      operationId: findEbookssByIdSubset
      summary: Display subsets of information for an ebook
  '/ebooks/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - ebooks
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findEBooksByName
      summary: Finds ebooks by name
  '/fileuploads/{resource}/{idType}/{id}':
    post:
      responses:
        '200':
          description: No response was specified
      tags:
        - fileuploads
      description: 'You can POST different types of files by entering parameters for {resource}, {idType}, and {id}, for example /JSSResource/fileuploads/computers/id/2.  Attachments can be uploaded by specifying computers, mobiledevices, enrollmentprofiles, printers, or peripherals as the resource.  Icons can be uploaded by specifying policies, ebooks, or mobiledeviceapplicationsicon as the resource. A mobile device application can be uploaded by using mobiledeviceapplicationsipa.  A disk encryption can be uploaded by specifying diskencryptionconfigurations as the resource.  idTypes supported are id and name, although peripheral names are not supported.   A sample command is  curl -k -u user:password https://my.JamfPro:8443/JSSResource/fileuploads/computers/id/2  -F name=@/Users/admin/Documents/Sample.doc -X POST'
      operationId: uploadFiles
      summary: Creates file attachments in Jamf Pro
  /gsxconnection:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - gsxconnection
      operationId: findGSXConnection
      summary: Finds the Jamf Pro GSX connection information
    put:
      responses:
        '200':
          description: No response was specified
      tags:
        - gsxconnection
      operationId: updateGSXConnection
      summary: Updates the Jamf Pro GSX connection information
  /healthcarelistener:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - healthcarelistener
      operationId: findHealthcareListener
      summary: Find all Healthcare Listener
  '/healthcarelistener/id/{id}':
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - healthcarelistener
      operationId: findHealthcareListenersById
      summary: Finds healthcare listener by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - healthcarelistener
      operationId: updateHealthCareListenerById
      summary: Updates an existing healthcare listener by id
  /healthcarelistenerrule:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - healthcarelistenerrule
      operationId: findHealthcareListenerRule
      summary: Find all Healthcare Listener rules
  '/healthcarelistenerrule/id/{id}':
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: '-1 represents the location field ''Room''; any other number is a mobile device extension attribute ID.'
          format: int64
          in: path
          name: device_inventory_field
          required: true
          type: integer
        - description: 'Accepted values are ''iPhone'' or ''TV'', indicating iOS and tvOS, respectively.'
          in: path
          name: operating_system
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - healthcarelistenerrule
      operationId: findHealthcareListenerRulesById
      summary: Finds Healthcare Listener rules by id
    post:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Readable name for this rule
          name: name
          required: true
          type: string
        - description: '-1 represents the location field ''Room''; any other number is a mobile device extension attribute ID.'
          format: int64
          in: path
          name: device_inventory_field
          required: true
          type: integer
        - description: 'Accepted values are ''iPhone'' or ''TV'', indicating iOS and tvOS, respectively.'
          in: path
          name: operating_system
          required: true
          type: string
        - description: 'MDM command to for rule to trigger. Valid values are ''EraseDevice'', ''DeviceLock'', ''ClearPasscode'', ''EnableLostMode'', and ''DisableLostMode'''
          in: path
          name: mdm_command
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - healthcarelistenerrule
      operationId: createHealthCareListenerRuleById
      summary: Creates a new Healthcare Listener rule
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Readable name for this rule
          name: name
          required: true
          type: string
        - description: '-1 represents the location field ''Room''; any other number is a mobile device extension attribute ID.'
          format: int64
          in: path
          name: device_inventory_field
          required: true
          type: integer
        - description: 'Accepted values are ''iPhone'' or ''TV'', indicating iOS and tvOS, respectively.'
          in: path
          name: operating_system
          required: true
          type: string
        - description: 'MDM command to for rule to trigger. Valid values are ''EraseDevice'', ''DeviceLock'', ''ClearPasscode'', ''EnableLostMode'', and ''DisableLostMode'''
          in: path
          name: mdm_command
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - healthcarelistenerrule
      operationId: updateHealthCareListenerRuleById
      summary: Updates an existing Healthcare Listener rule by id
  /ibeacons:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - ibeacons
      operationId: findIBeacons
      summary: Finds all iBeacon regions
  '/ibeacons/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - ibeacons
      operationId: deleteIBeaconById
      summary: Deletes an iBeacon region by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - ibeacons
      operationId: findIBeaconsById
      summary: Finds iBeacon regions by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - ibeacons
      operationId: createIBeaconById
      summary: Creates a new iBeacon region by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - ibeacons
      operationId: updateIBeaconById
      summary: Updates an existing iBeacon region by id
  '/ibeacons/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - ibeacons
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findIBeaconsByName
      summary: Finds iBeacon regions by name
  /infrastructuremanager:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - infrastructuremanager
      operationId: findInfrastructureManager
      summary: Find all Infrastructure Managers
  '/infrastructuremanager/id/{id}':
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - infrastructuremanager
      operationId: findInfrastructureManagerById
      summary: Finds infrastructure manager by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - infrastructuremanager
      operationId: updateInfrastructureManagerById
      summary: Updates an existing infrastructure manager by id
  /jsonwebtokenconfigurations:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - jsonwebtokenconfigurations
      operationId: findJsonWebTokenConfigurations
      summary: Finds all JSON Web Token configurations
  '/jsonwebtokenconfigurations/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - jsonwebtokenconfigurations
      operationId: deleteJsonWebTokenConfigurationById
      summary: Deletes a JSON Web Token configuration by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - jsonwebtokenconfigurations
      operationId: findJsonWebTokenConfigurationById
      summary: Find JSON Web Token configuration by id
    post:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - jsonwebtokenconfigurations
      operationId: createJsonWebTokenConfigurationById
      summary: Creates a new JSON Web Token configuration by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - jsonwebtokenconfigurations
      operationId: updateJsonWebTokenConfigurationById
      summary: Updates an existing JSON Web Token configuration by id
  /jssuser:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - jssuser
      operationId: findjssuser
      summary: 'Returns basic information about Jamf Pro, as well as privileges of the person requesting the resource.  Deprecated.'
  /ldapservers:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - ldapservers
      operationId: findLDAPServers
      summary: Finds all ldapservers
  '/ldapservers/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - ldapservers
      operationId: deleteLDAPServerById
      summary: Deletes a ldap server by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - ldapservers
      operationId: findLDAPServersById
      summary: Finds ldap servers by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - ldapservers
      operationId: createLDAPServerById
      summary: Creates a new ldap server by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - ldapservers
      operationId: updateLDAPServerById
      summary: Updates an existing ldap server by id
  '/ldapservers/id/{id}/group/{group}':
    get:
      parameters:
        - description: Server Id to filter by
          in: path
          name: id
          required: true
          type: string
        - description: Group to filter by
          in: path
          name: group
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - ldapservers
      description: 'Displays information about matching groups for an ldap server specified with the {id} parameter. Server lookup by name is also supported.  For example, /ldapservers/id/3/group/Staff or /ldapservers/name/ADServer/group/ITStaff.'
      operationId: findLDAPServerGroup
      summary: Display information for matching groups for an ldap server
  '/ldapservers/id/{id}/group/{group}/user/{user}':
    get:
      parameters:
        - description: Server Id to filter by
          in: path
          name: id
          required: true
          type: string
        - description: Group to filter by
          in: path
          name: group
          required: true
          type: string
        - description: User to filter by
          in: path
          name: user
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - ldapservers
      description: 'Displays information about user membership in a group for an ldap server specified with the {id} parameter. Exact matches are used for group and user. Multiple users separated by a comma are allowed.  Server lookup by name is also supported.  For example, /ldapservers/id/3/group/staff/user/Fred, /ldapservers/name/ADServer/group/staff/user/Sam or /ldapservers/name/ADServer/group/staff/user/Fred,Sam.'
      operationId: findLDAPServerGroupUser
      summary: Display information about user membership in a group for an ldap server
  '/ldapservers/id/{id}/user/{user}':
    get:
      parameters:
        - description: Server Id to filter by
          in: path
          name: id
          required: true
          type: string
        - description: User to filter by
          in: path
          name: user
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - ldapservers
      description: 'Displays information about matching users for an ldap server specified with the {id} parameter. Server lookup by name is also supported.  For example, /ldapservers/id/3/user/Fred or /ldapservers/name/ADServer/user/Sam.'
      operationId: findLDAPServerUser
      summary: Display information for matching users for an ldap server
  '/ldapservers/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - ldapservers
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findLDAPServersByName
      summary: Finds ldap servers by name
  /licensedsoftware:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - licensedsoftware
      operationId: findLicensedSoftware
      summary: Finds all licensed software
  '/licensedsoftware/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - licensedsoftware
      operationId: deleteLicensedSoftwareById
      summary: Deletes a computer command by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - licensedsoftware
      operationId: findLicensedSoftwareById
      summary: Finds licensed software by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - licensedsoftware
      description: 'Matching computers are derived, thus they cannot be set with POST.'
      operationId: createLicensedSoftwareById
      summary: Creates a new computer command by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - licensedsoftware
      description: 'Matching computers are derived, thus they cannot be set with PUT.'
      operationId: updateLicensedSoftwareById
      summary: Updates an existing computer command by id
  '/licensedsoftware/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - licensedsoftware
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findLicensedSoftwareByName
      summary: Finds licensed software by name
  /logflush:
    delete:
      responses:
        '200':
          description: No response was specified
      tags:
        - logflush
      description: 'log, log_id, interval, and devices specified in an XML file. Sample file: <logflush><log>policy</log><log_id>2</log_id><interval>THREE MONTHS</interval><computers><computer><id>1</id></computer><computer><id>2</id></computer></computers></logflush>'
      operationId: logFlush
      summary: Flushes a log specified in an XML file.
  '/logflush/{log}/id/{id}/interval/{interval}':
    delete:
      parameters:
        - description: 'Id of policy whose log will be flushed, such as id/7.'
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - logflush
      description: 'Interval is a combination of Zero, One, Two, Three, Six, and Day, Week, Month, Year.  For example, JSSResource/logflush/policies/interval/Three+Months'
      operationId: createLogFlushWithIdAndInterval
      summary: Flushes a log for a policy for a given interval listed in the URL.
  '/logflush/{log}/interval/{interval}':
    delete:
      parameters:
        - description: Interval to be flushed.
          in: path
          name: interval
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - logflush
      description: 'Interval is a combination of Zero, One, Two, Three, Six, and Day, Week, Month, Year.  For example, JSSResource/logflush/policies/interval/Three+Months'
      operationId: createLogFlushForInterval
      summary: Flushes a log for all policies for a given interval listed in the URL.
  /macapplications:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - macapplications
      operationId: findMacapps
      summary: Finds all mac applications
  '/macapplications/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - macapplications
      operationId: deleteMacappById
      summary: Deletes a mac application by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - macapplications
      operationId: findMacappsById
      summary: Finds mac applications by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - macapplications
      description: POST cannot be used to set vpp codes.
      operationId: createMacappById
      summary: Creates a new mac application by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - macapplications
      description: PUT cannot be used to set vpp codes.
      operationId: updateMacappById
      summary: Updates an existing mac application by id
  '/macapplications/id/{id}/subset/{subset}':
    get:
      parameters:
        - description: Id to filter by
          in: path
          name: id
          required: true
          type: string
        - default: General
          description: Subset to filter by
          in: path
          name: subset
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - macapplications
      description: 'Displays information specified with the {subset} parameter for a mac application specified with the {id} parameter. Lookup by name is also supported.  For example, /macapplications/id/3/subset/General&Scope or /macapplications/id/3/subset/General.'
      operationId: findMacappsByIdSubset
      summary: Display subsets of information for a mac application
  '/macapplications/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - macapplications
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findMacappsByName
      summary: Finds mac applications by name
  /managedpreferenceprofiles:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - managedpreferenceprofiles
      operationId: findManagedPreferenceProfiles
      summary: Finds all managed preference profiles
  '/managedpreferenceprofiles/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - managedpreferenceprofiles
      operationId: deleteManagedPreferenceProfilesById
      summary: Deletes a managed preference profiles by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - managedpreferenceprofiles
      operationId: findManagedPreferenceProfilesById
      summary: Finds managed preference profiles by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - managedpreferenceprofiles
      operationId: createManagedPreferenceProfileById
      summary: Creates a new managed preference profile by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - managedpreferenceprofiles
      operationId: updateManagedPreferenceProfilesById
      summary: Updates an existing managed preference profiles by id
  '/managedpreferenceprofiles/id/{id}/subset/{subset}':
    get:
      parameters:
        - description: Id to filter by
          in: path
          name: id
          required: true
          type: string
        - default: General
          description: Subset to filter by
          in: path
          name: subset
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - managedpreferenceprofiles
      description: 'Displays information specified with the {subset} parameter for a profile specified with the {id} parameter. Name is also supported.  For example, /managedpreferenceprofiles/id/3/subset/General&Settings.'
      operationId: findManagedPreferenceProfilesByIdSubset
      summary: Display subsets of information for a managed preference profile
  '/managedpreferenceprofiles/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - managedpreferenceprofiles
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findManagedPreferenceProfilesByName
      summary: Finds managed preference profiles by name
  /mobiledeviceapplications:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - mobiledeviceapplications
      operationId: findMobileDeviceApplications
      summary: Finds all mobile device applications
  '/mobiledeviceapplications/bundleid/{bundleid}':
    get:
      parameters:
        - description: Bundle ID to filter by
          in: path
          name: bundleid
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - mobiledeviceapplications
      description: 'You can also PUT and DELETE using this resource URL. If multiple applications match, no application is returned.  You may specify both bundle id and version to uniquely identify a mobile device application.'
      operationId: findMobileDeviceApplicationsByBundleID
      summary: Finds mobile device applications by bundle ID
  '/mobiledeviceapplications/bundleid/{bundleid}/version/{version}':
    get:
      parameters:
        - description: Bundle ID to filter by
          in: path
          name: bundleid
          required: true
          type: string
        - description: Version to filter by
          in: path
          name: version
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - mobiledeviceapplications
      description: You can also PUT and DELETE using this resource URL.
      operationId: findMobileDeviceApplicationsByBundleIDandVersion
      summary: Finds mobile device applications by bundle ID and version
  '/mobiledeviceapplications/id/{id}':
    delete:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - mobiledeviceapplications
      operationId: deleteMobileDeviceApplicationById
      summary: Deletes a mobile device application by id
    get:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - mobiledeviceapplications
      operationId: findMobileDeviceApplicationsById
      summary: Finds mobile device applications by id
    post:
      parameters:
        - description: Id value to filter by
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - mobiledeviceapplications
      description: '<keep_description_and_icon_up_to_date> refers to the option to automatically update app information.  App configuration preferences should be listed using character entities, e.g. <preferences>&lt;dict&gt;&lt;key&gt;JSS_ID&lt;/key&gt;&lt;string&gt;313&lt;/string&gt;&lt;/dict&gt;</preferences>'
      operationId: createMobileDeviceApplicationById
      summary: Creates a new mobile device application by id
    put:
      parameters:
        - description: Id value to filter by
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
      tags:
        - mobiledeviceapplications
      description: '<keep_description_and_icon_up_to_date> and <automatically_update_app> are redundant.  App configuration preferences should be listed using character entities, e.g. <preferences>&lt;dict&gt;&lt;key&gt;abc&lt;/key&gt;&lt;string&gt;xyz&lt;/string&gt;&lt;/dict&gt;</preferences>'
      operationId: updateMobileDeviceApplicationById
      summary: Updates an existing mobile device application by id
  '/mobiledeviceapplications/id/{id}/subset/{subset}':
    get:
      parameters:
        - description: Id to filter by
          in: path
          name: id
          required: true
          type: string
        - default: General
          description: Subset to filter by
          in: path
          name: subset
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - mobiledeviceapplications
      description: 'Displays information specified with the {subset} parameter for a mobile device application specified with the {id} parameter. Lookup by name or bundle id is also supported.  For example, /mobiledeviceapplications/id/3/subset/General or /mobiledeviceapplications/name/MyApp/subset/General&SelfService.'
      operationId: findMobileDeviceAppsByIdSubset
      summary: Display subsets of information for a mobile device application
  '/mobiledeviceapplications/name/{name}':
    get:
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
      tags:
        - mobiledeviceapplications
      description: 'You can PUT, POST, and DELETE using this resource URL.'
      operationId: findMobileDeviceApplicationsByName
      summary: Finds mobile device applications by name
  /mobiledevicecommands:
    get:
      responses:
        '200':
          description: No response was specified
      tags:
        - mobiledevicecommands
      operationId: findMobileDeviceCommands
      summary: Finds all mobile device commands
  /mobiledevicecommands/command:
    post:
      parameters:
        - description: Command name
          in: body
          name: command
          required: true
          schema:
            type: string
        - description: Device name to set (required for DeviceName command)
          in: body
          name: device_name
          required: false
          schema:
            type: string
        - description: Lock message for the DeviceLock command
          in: body
          name: lock_message
          required: false
          schema:
            type: string
        - description: 'Where to set wallpaper (required for Wallpaper command). Possible integer values are: 1 (Lock screen), 2 (Home screen), or 3 (Lock and home screens)'
          in: body
          name: wallpaper_setting
          required: false
          schema:
            type: integer
        - description: Device name to set (required for Wallpaper command if wallpaper_content is not set)
          in: body
          name: wallpaper_id
          required: false
          schema:
            type: string
        - description: Wallpaper image in PNG or JPEG format encoded using base64 (required for Wallpaper command if wallpaper_id is not set)
          in: body
          name: wallpaper_content
          required: false
          schema:
            type: string
        - description: The number of secon
